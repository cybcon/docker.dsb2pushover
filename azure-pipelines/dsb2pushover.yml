# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

name: '$(Date:yyyy-MM-dd)$(Rev:.rr)__$(SourceBranchName)'

trigger:
  batch: true
  paths:
    include:
      - src/*
      - Dockerfile
  branches:
    include:
      - master
      - main

resources:
  repositories:
    - repository: self
    - repository: pipeline.azuredevops.workflows
      type: git
      ref: refs/heads/master
      name: pipeline.azuredevops.workflows

pool:
  vmImage: ubuntu-latest

variables:
  appVersion: 1.0.12
  REGISTRY: Docker Hub (OITC)
  REPOSITORY_NAME: oitc/dsb2pushover
  containerBuildPath: $(Build.Repository.Name)/resources
  continue_on_linter_findings: false
  continue_on_security_findings: true

steps:
  - checkout: self
    displayName: Checkout GIT repository

  - checkout: pipeline.azuredevops.workflows
    displayName: Checkout central AzureDevops pipeline workflows

  - task: Docker@2
    displayName: Login to Docker Hub
    inputs:
      command: login
      containerRegistry: Docker Hub (OITC)

  - template: docker/dockerfile_linter.yaml@pipeline.azuredevops.workflows
    parameters:
      dockerfile: $(Build.Repository.LocalPath)/$(containerBuildPath)/Dockerfile
      continue_on_findings: ${{ variables.continue_on_linter_findings }}

  - task: Docker@2
    displayName: Build DSB to Pushover v${{ variables.appVersion }} container image
    inputs:
      containerRegistry: $(REGISTRY)
      repository: $(REPOSITORY_NAME)
      command: build
      Dockerfile: $(Build.Repository.LocalPath)/$(containerBuildPath)/Dockerfile
      buildContext: $(containerBuildPath)
      tags: |
        latest
        $(appVersion)
        $(appVersion).$(Build.BuildId)

  - template: docker/docker_security_scan.yaml@pipeline.azuredevops.workflows
    parameters:
      container_image: $(REPOSITORY_NAME):$(appVersion).$(Build.BuildId)
      continue_on_findings: ${{ variables.continue_on_security_findings }}
      # files_to_skip:

  - task: Docker@2
    displayName: Push container image
    inputs:
      containerRegistry: $(REGISTRY)
      repository: $(REPOSITORY_NAME)
      command: push
      Dockerfile: $(Build.Repository.LocalPath)/$(containerBuildPath)/Dockerfile
      buildContext: $(containerBuildPath)
      tags: |
        latest
        $(appVersion)
        $(appVersion).$(Build.BuildId)
